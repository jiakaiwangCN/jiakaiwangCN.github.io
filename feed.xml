<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://jiakaiwangcn.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://jiakaiwangcn.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-18T08:37:26+00:00</updated><id>https://jiakaiwangcn.github.io/feed.xml</id><title type="html">blank</title><subtitle>Jiakai Wang, Associate researcher at Zhongguancun Laboratory. </subtitle><entry><title type="html">Statement | Renshuai Tao</title><link href="https://jiakaiwangcn.github.io/blog/2025/statement-renshuai-tao/" rel="alternate" type="text/html" title="Statement | Renshuai Tao"/><published>2025-04-02T00:00:00+00:00</published><updated>2025-04-02T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2025/statement--renshuai-tao</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2025/statement-renshuai-tao/"><![CDATA[<p>Materials for courses you taught. Replace this text with your description.[2025.04.02] 今天唠唠paper的作者署名顺序问题学术论文的作者署名问题，历来是个焦点。这里想和大家聊聊这个问题，限于认知水平，欢迎邮件我进行批评指正。写在前面：我的高等教育一共8年（本科4年，硕士1年，博士3年），本科和硕士期间，我做的事情和研究毫无关系。博士进入了新的课题组，正式开始接触深度学习，从零基础到毕业，3年时间（由于当年想着进工业界，在达到学校和导师关于paper的要求之后，申请了提前一年毕业）。我的第一篇paper是跟着一位硕士同学发的，就是publication中的MM’20（共一第二），那是我博一的时候，科研小白，终日里浑浑噩噩，一位硕士同学邀请我参与到他的project中，帮他做些事情。当时我觉得自己很菜，能有人看得上我，欣然接受。MM接收之后，硕士同学毕业了，我就接着他的课题做。这时候我发现有了MM’20的经验，我在写代码、写论文、绘制图表上的本事突飞猛进，开始有自己的思路了，便在这个方向上持续探索，就有了后来的ICCV’21、 CVPR’22、MM’22，以及进入北交后的CVPR’25。时至今日，我回想起来，仍然感谢那段合作共赢、同舟共济的岁月。一篇学术paper的产出需要经历文献调研、idea讨论、实验反复修正、论文撰写、图表精细绘制、和审稿人rebuttal，以及大概率（顶会现在的接受率约为20%）的被拒稿后的修改重投。贡献的大小也很难有个清晰、明确、共识的标准。这里，我觉得有个简单的逻辑：论文署名，在整个project开动前，把顺序、每个人要负责的事情，都提前沟通清楚，各方都能接受的时候再开工。To 本科生：大部分来找我的本科生：（1）计算机视觉领域零基础。（2）平时要上课。（3）想短时间内有产出，方便后续的推免。平心而论，这种情况很难产出A类论文。如果那么轻松地发表论文，让日日夜夜泡在实验室愁毕业的博士生们情何以堪？一些本科生主动提出，时间精力有限，想只承担部分工作，对署名顺序不做要求。对于这类同学，我倾向于自己，或者协调国内外优秀的青年学者来主导一个work，本科生同学做操作上的执行者，做学生第一作者。过程中，我会push第一作者付出足够的贡献，最终促成一篇paper中稿。大家在时间、精力、成果上都有一个合作共赢的结果。可喜的是，在这种模式下，很多优秀的本科同学都陆续产出了不错的paper。后续我带着他们找了更加senior的老师，例如国家杰青、长江学者、IEEE Fellow等写推荐信，并尽我所能协调资源帮着联系外推，很高兴看到大家都有了不错的去处。还有一些本科生主动提出，或者过程中被我发现具备不错的能力，我鼓励他们要自己学着主导一个工作，做第一作者。这种模式下，已经有优秀本科生在课题组的支持下投稿了第一作者的paper，更多的本科生第一作者的paper还在持续研究中。然而，我也清醒地认识到，一些本科生目前不具备主导一个工作的能力，如果放手让他们去主导一个工作，即便勉强糊了一篇paper，命中的概率极低。不如把时间、精力放在其他更有意义的事情上。所以，对于想进组的本科生同学，我希望大家来之前想一想，自己适合哪种模式。我希望并鼓励本科生同学勇于做研究的主导者，向一些优秀的本科生同辈学习，做出足够的贡献，以第一作者身份去发paper。我会尽到指导的责任，提供研究思路、算法建议、论文修改、算力支持等必要保障，在具体的操作层面要让我少操点心。To 研究生：研究生应当具备完整的科研训练。有了足够的经验和教训之后，我认为自己不应该去主导一个研究生同学的project。我要求研究生同学做研究的主导者，做出足够的贡献，以第一作者身份去发paper。我会尽到指导的责任，提供研究思路、算法建议、论文修改、算力支持等必要保障。</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Materials for courses you taught. Replace this text with your description.]]></summary></entry><entry><title type="html">朝阳</title><link href="https://jiakaiwangcn.github.io/blog/2024/sunrise/" rel="alternate" type="text/html" title="朝阳"/><published>2024-11-29T07:00:00+00:00</published><updated>2024-11-29T07:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2024/sunrise</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2024/sunrise/"><![CDATA[<p>朝阳和夕阳 并没有什么分别 总归是 一个疲惫的灵魂 载着 另一个 疲惫的灵魂</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="现代诗"/><summary type="html"><![CDATA[作于打工路上]]></summary></entry><entry><title type="html">调笑令</title><link href="https://jiakaiwangcn.github.io/blog/2024/midAug/" rel="alternate" type="text/html" title="调笑令"/><published>2024-09-17T21:00:00+00:00</published><updated>2024-09-17T21:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2024/midAug</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2024/midAug/"><![CDATA[<p>秋社，秋社，谁令汝来祭月？传杯推盏合欢，明光照彻夜阑。阑夜，阑夜，最难团圆此刻。</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="长短句"/><summary type="html"><![CDATA[秋社，秋社，谁令汝来祭月？传杯推盏合欢，明光照彻夜阑。阑夜，阑夜，最难团圆此刻。]]></summary></entry><entry><title type="html">VSCode安装指南_vscode权威指南pdf下载-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2020/vscode_vscodepdf-csdn/" rel="alternate" type="text/html" title="VSCode安装指南_vscode权威指南pdf下载-CSDN博客"/><published>2020-05-04T00:00:00+00:00</published><updated>2020-05-04T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2020/vscode_vscodepdf-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2020/vscode_vscodepdf-csdn/"><![CDATA[<p>这是一篇傻瓜式的VSCode安装指南，还包括如何安装Python扩展工具，使其可以运行Python，多图预警！~~VSCode全称是Visual Studio Code，是由Microsoft出品的新一代编辑器，同时丰富的扩展使得VSCode可以做到IDE能做的事情。点击这个VSCode下载安装文件，如下图： 下载的安装包文件如下图： 按照下图的流程安装 这里可以选择自定义安装位置 注意，这里的最好选上，对新手友好 点击安装后等待即可 安装完成 再打开的VSCode中，寻找扩展安装功能，如下图 在检索框输入Python，选择第一个搜索结果，并安装（如上图）在一阵较短的等待后，安装完毕，并出现如下页面 完成扩展安装，进行测试首先新建一个Python文件输入随后具体如下图，位置可以自定义，保存名为 点击右上角的绿色小三角 等待运行结果出现<em>hello world！</em>表示安装成功</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            ESP32-C3专栏36 人学习以实战为线索，结合乐鑫官方教程和教材，讲解ESP32-C3及ESP-IDF开发的功能以及实际遇到的问题和解决方法。深入C++编程入门专栏38 人学习欢迎来到《深入C++编程入门专栏》！如果你渴望掌握一门强大的编程语言，那么C++无疑是一个绝佳的选择。无论是游戏开发、系统编程、嵌入式设备还是高性能应用程序，C++都是行业内的首选语言。大模型技术与应用专栏0 人学习此专栏部分深入浅出的从LLM历史发展到未来做了一个全面的阐述，去掉了难懂的过于专业的内容，力求用读书的方式，在读完后能对LLM有一个深刻的理解。请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读737次。VSCode安装指南这是一篇傻瓜式的VSCode安装指南，还包括如何安装Python扩展工具，使其可以运行Python，多图预警！~~VSCode简介VSCode全称是Visual Studio Code，是由Microsoft出品的新一代编辑器，同时丰富的扩展使得VSCode可以做到IDE能做的事情。下载VSCode安装包点击这个VSCode下载安装文件，如下图：下载的安装包文件如下图：安装VSCode按照下图的流程安装这里可以选择自定义安装位置注意，这里的最好选上，对新手友_vscode权威指南pdf下载]]></summary></entry><entry><title type="html">Win10环境下安装pytorch踩坑实录_pytorch libc10.so-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2018/win10pytorch_pytorch-libc10so-csdn/" rel="alternate" type="text/html" title="Win10环境下安装pytorch踩坑实录_pytorch libc10.so-CSDN博客"/><published>2018-10-17T00:00:00+00:00</published><updated>2018-10-17T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2018/win10pytorch_pytorch-libc10so-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2018/win10pytorch_pytorch-libc10so-csdn/"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      摘要生成于
       C知道 
      ，由 DeepSeek-R1 满血版支持，
       前往体验 &gt;由于学习需要，笔者开始在win10下使用pip安装pytorch，以学习此框架（为何不用linux？懒）废话不说，直接上干货这个是安装命令，不用多说下面看看遇到的问题：这个表示使用pip命令不对，应该采用python3的pip命令，即使这个没啥好说，pip版本太低，需要升级，照着命令提示进行就可以了如图接下来就比较坑了，遇到了一个这样的问题，但是不明白是为什么，在百度上摸了很久，很遗憾，没找到有效的解决方案，大部分给出的说法是只能手动下载whl文件，如果有大佬看见了并且能够解决恳请解释。于是只能下载whl文件以后install了，索性这次就非常稳了，一路流畅，建议大家直接按照这种方式完成pytorch的安装 命令行如下： 
      
      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读2.1w次，点赞5次，收藏24次。本文详述了在Windows 10环境下使用pip安装PyTorch及遇到的常见问题，包括错误的pip指令、pip版本过低、安装失败等，并分享了手动下载whl文件的成功安装经验。]]></summary></entry><entry><title type="html">基于扩展C0文法的编译器设计（Part1）_文法 竖线 编译器-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2017/c0part1_-csdn/" rel="alternate" type="text/html" title="基于扩展C0文法的编译器设计（Part1）_文法 竖线 编译器-CSDN博客"/><published>2017-02-23T00:00:00+00:00</published><updated>2017-02-23T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2017/c0part1_---csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2017/c0part1_-csdn/"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      摘要生成于
       C知道 
      ，由 DeepSeek-R1 满血版支持，
       前往体验 &gt;啊（充满哲♂学的呻吟）  终于在上学期完成了我航课程中的三巨头之一——编译，有了一点微不足道的收获。现在才有时间整理一下整个过程，发到博客上以记录自己的成果，顺便如果有学弟学妹需要也可以参考借鉴（但是别照搬——有查重!!）文法无需改写，符合要求，解读如下：  ＜加法运算符＞ ::= +｜-  分析：定义加减法运算符  样例：a+b a-b  ＜乘法运算符＞ ::= *｜/  分析：定义乘除法运算符  样例：a*b a/b  ＜关系运算符＞ ::= &lt;｜&lt;=｜&gt;｜&gt;=｜!=｜==  分析：定义关系运算符小于，不大于，不小于，大于，不等于，等于  样例：a&gt;b a&lt;=b a!=b  ＜字母＞ ::= ＿｜a｜．．．｜z｜A｜．．．｜Z  分析：定义字母，是由下划线 _ 和26个字母的大小写组成的，不允许除此之外的其他字符  样例：_ a b z A B Z  ＜数字＞ ::= ０｜＜非零数字＞  分析：定义数字的形式，0~9  样例：0 1 2 3 4 9  ＜非零数字＞ ::= １｜．．．｜９  分析：定义非零数字，是1~9  样例：1 2 3 4 9＜字符＞ ::= ‘＜加法运算符＞’｜’＜乘法运算符＞’｜’＜字母＞’｜’＜数字＞’  分析：定义字符的形式，它是被‘’包裹的加法运算符或者乘法运算符或者字母或者数字  样例：‘+’‘-’‘*’‘a’‘_’＜字符串＞ ::= “｛十进制编码为32,33,35-126的ASCII字符｝”  分析：定义字符串的格式，字符串是被“”包裹的若干个（可以是0个）十进制ascii码值为32，33，35~126的字符组合  样例：“abcd”＜程序＞ ::= ［＜常量说明＞］［＜变量说明＞］{＜有返回值函数定义＞|＜无返回值函数定义＞}＜主函数＞  分析：程序定义为严格顺序的 常量说明-字符串说明-有返回值函数定义-无返回值函数定义-主函数 的字符串组合，其中常量说明和变量说明可以没有，如果有，只能出现一次（即不存在多个常量或者变量说明语句），有返回值函数定义和无返回值函数定义可以有若干个，以主程序结尾。  样例：  const int a，b，c；  int q，w，e；
      
      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读4.4k次。本文档详细介绍了基于扩展C0文法的编译器设计，涵盖了文法说明、目标代码解释及初步的优化方案。内容包括文法规则，如加法、乘法和关系运算符，标识符、数字和字符定义，以及程序结构。此外，还涉及到常量和变量声明，函数定义，以及表达式和语句的解析。目标代码以MIPS指令形式表示，并进行了窥孔优化和全局变量替换等基础优化。]]></summary></entry><entry><title type="html">基于扩展C0文法的编译器设计（Part2）_四元式assign,addi,imul等等-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2017/c0part2_assignaddiimul-csdn/" rel="alternate" type="text/html" title="基于扩展C0文法的编译器设计（Part2）_四元式assign,addi,imul等等-CSDN博客"/><published>2017-02-23T00:00:00+00:00</published><updated>2017-02-23T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2017/c0part2_assignaddiimul-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2017/c0part2_assignaddiimul-csdn/"><![CDATA[<p>由于笔者选择mips作为最终的目标代码，因此对文法分析后判断需要实现的mips指令表如下：为了便于实现，这里采用无序符号表的组织方式。 具体的符号表数据结构如下： 原计划寄存器分配采用启发式图着色算法。采用该方法的主要目的是为了避免因引用计数法带来的全局寄存器前中后期分配不均问题。具体实现时，采用了固定寄存器分配（只使用t1，t2两个临时寄存器，随用随取）。 运行栈设计采用课本介绍的经典动态存储分配方式，图示如下： 对于整个文法而言，可能出现的有关数据的操作和对应的四元式设计如下表：1. 如何为中间代码选择语义等价且运行效率高的目标指令； 2. 为目标代码、局部变量、全局变量、静态变量、临时变量、常量等指定和划分地址空间； 3. 由于源程序和中间代码中的变量和数据结构的显示定义都将消失，取而代之的是具体的寄存器编号和内存空间地址等，因此需要准确合理的将这些寄存器和内存单元分配给不同类型和结构的变量； 4. 生成和输出目标代码序列到文件。在这一过程中，目标代码的序列和输入的中间代码序列在顺序上可以一致，也可以不一致，在保证语义不变的前提下，尽量选择更高执行效率或者更小存储空间的代码序列。1．窥孔优化（未实现） 在采用中间代码到目标代码逐条生成的过程中，目标代码中经常会出现代码的冗余或者低效率的指令，为了消除这种指令，我们采用窥孔优化的方式处理。窥孔优化关注在目标指令的一个较短序列上，通过删除冗余代码或者替换更高效和简洁的代码来使得最终得到的目标代码是高质量的。 2．常数合并 如果在编译的时候，对于某些表达式的部分或者全部操作数的值，则此表达式就会被优化，将已知值的操作数进行可以进行的运算后再与变量进行运算。 3.常量替换 在编译之初就将所有常量替换为值，不在对常量进行取址等操作。 4.消除公共子表达式（未实现）#define FILEOPEN_ERROR -1 //file open failed #define ZEROSTART_ERROR 0 // #define UNDEFFUNC_ERROR 1 #define UNDEFCHAR_ERROR 2 //undefined IDEN #define UNMATCHSQ_ERROR 3 //unmatched singal quoto #define UNMATCHDQ_ERROR 4 // unmatched double quoto #define OUTOFTABINDEXX_ERROR 5 // out of table max length #define FUNCNAMECOMPLICT_ERROR 6 // function name conplict #define VARNAMECOMPLICT_ERROR 7 //variable name complict #define NAMECOMPLICTGLOBAL_ERROR 8 //name can not complict with global #define DELHEAD_IDMIS_ERROR 9 // id missed in delcare head part #define AFTERASS_NOTIDEN_ERROR 10 // after a assign symbol should be a dientifier symbol #define CONSTDEF_ASSMIS_ERROR 11 // in a const defination assign symbol missed #define CONSTDEF_TYPE_ERROR 12 // const defination have only two type #define SEMICSYMMIS_ERROR 13 // ; missed #define VARDEF_ARRAYINDEX_ERROR 14 //an array index should be number in variable defination #define VARDEF_TYPE_ERROR 15 // in a vardefine, identifier type error #define MAINSYM_ERROR 16 // in a main function, name must be ” #define LPARENSYMMIS_ERROR 17 // main ( missed #define RPARENSYMMIS_ERROR 18 // main ) missed #define LBPARENSYMMIS_ERROR 19 // mian { #define RBPARENSYMMIS_ERROR 20 // main } #define RMPARENSYMMIS_ERROR 21 // ] missed #define AFTEROP_NUMMIS_ERROR 22 // -56 ok, -b not accepted #define FACTOR_ERROR 23 // factor type error #define ASSIGNSTATUS_ERROR 24 // assign status error #define STATUS_ERROR 25 // status error #define CONDITIONOP_ERROR 26 // condition status error #define WHILESYMMIS_ERROR 27 // while symbol missed #define IDSYMMIS_ERROR 28 // in a for loop, identifier missed in initial #define FORASSIGNMIS_ERROR 29 // int a for loop initial, assign symbol must appeare #define VARTYPE_ERROR 30 // in a for loop, loop variable should not be a const #define FOROPMIS_ERROR 31 // in for loop step part, op(+/-) missed #define FORDIGSYM_ERROR 32 // in for loop step part, digital missed #define VOIDSYMMIS_ERROR 33 // in main function, void symbol missed #define PARANUM_ERROR 34 // paramenter number error #define UNEXCEPTRETURNVAL_ERROR 35 // void function return value #define READARRAY_ERROR 36 // read an array name1.递归子程序发现错误立即调用error()并传递出错信号； 2.error函数通过接收到的出错信号打印出出错信息和位置信息； 3.通过出错类型型号和位置判断应该如何进行跳读； 4.继续编译，直到文件结束。运行环境为32位Win7系统，运行软件为CodeBlocks13.12版本。打开final.cbp文件，输入目标文件所在位置（绝对位置或者相对位置均可）。内容略，已经过集成测试</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            自制一个编译器专栏0 人学习自制编程语言suatin，基本没用编译原理的知识，所以有些麻烦。这是最早接触编程语言开发的经历，使用一些奇技淫巧写一个解释器，很多功能都没有，但是对于初学者来说，也是个很艰苦很漫长，但是稍微有些收获的经历吧！013 - 软考学习（计算机基础）专栏1 人学习A - 软考学习（计算机基础）编译原理专栏1 人学习深入浅出理解编译原理请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读4.1k次。2．类/方法/函数功能词法分析部分： 函数名 功能 Int isSpace（）等 判断相关字符种类 void getch（） 读取一个字符_四元式assign,addi,imul等等]]></summary></entry><entry><title type="html">基于扩展C0文法的编译器设计（Part3）-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2017/c0part3-csdn/" rel="alternate" type="text/html" title="基于扩展C0文法的编译器设计（Part3）-CSDN博客"/><published>2017-02-23T00:00:00+00:00</published><updated>2017-02-23T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2017/c0part3-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2017/c0part3-csdn/"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读5.5k次，点赞3次，收藏2次。代码main.cpp#include #include #include #include #include #include "asm.cpp"#define after_switch 1using namespace std ;int main(){ string fileNam_c0文法]]></summary></entry><entry><title type="html">词法分析程序实践-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2016/csdn/" rel="alternate" type="text/html" title="词法分析程序实践-CSDN博客"/><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2016/-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2016/csdn/"><![CDATA[<p>这是笔者按照课本中的思路实现的词法分析程序，具体细节和意义请参考 《编译技术》张莉等著.–北京：高等教育出版社,2016.9.ISBN: 978-7-04-046317-0 注：本程序使用文件读入的方法进行字符的读取，每次识别一个词，返回值一个词的类型，类型码在注释中给出。 代码如下：对于样例： code.txt测试结果如下：</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            课程设计专栏89 人学习计算机相关课程的课程设计-报告和程序程序算法宝典汇总专栏97 人学习程序届疑难杂症编译原理实验专栏2 人学习大学编译原理实验请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读1.9k次，点赞2次，收藏7次。这是笔者按照课本中的思路实现的词法分析程序，具体细节和意义请参考 《编译技术》张莉等著.–北京：高等教育出版社,2016.9.ISBN: 978-7-04-046317-0 注：本程序使用文件读入的方法进行字符的读取，每次识别一个词，返回值一个词的类型，类型码在注释中给出。 代码如下：#include #include #include]]></summary></entry><entry><title type="html">关于关系代数中除法的理解以及如何用基本运算表示除法_关系代数除法怎么理解-CSDN博客</title><link href="https://jiakaiwangcn.github.io/blog/2016/_-csdn/" rel="alternate" type="text/html" title="关于关系代数中除法的理解以及如何用基本运算表示除法_关系代数除法怎么理解-CSDN博客"/><published>2016-09-21T00:00:00+00:00</published><updated>2016-09-21T00:00:00+00:00</updated><id>https://jiakaiwangcn.github.io/blog/2016/_-csdn</id><content type="html" xml:base="https://jiakaiwangcn.github.io/blog/2016/_-csdn/"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      摘要生成于
       C知道 
      ，由 DeepSeek-R1 满血版支持，
       前往体验 &gt;关系代数中的基本运算包括并，差，笛卡尔积，选择，投影。这五种基本代数运算可以推导出交、连接（包括自然连接）、和除法。其中前两者比较容易推导，直接根据定义不难得出，而除法定义理解起来较为复杂，且同时牵涉行与列的运算，因此较难推导。下面给出推导方式：首先给出除法的定义：  老师PPT中的定义：  设关系R（X，Y）与关系S（Z），其中Y和Z具有相同的属性数，且对应属性出自相同域。关系R除以关系S所得的商关系是关系R在属性X上的投影的一个子集，该子集和S（Z）的笛卡尔积必须包含在R（X，Y）中。  课本的定义：  设关系R除以关系S所得的结果为关系T，则T包含所有在关系R中但不在关系S中的属性及其值，且T的元组于与S的元组的所有组合都在R中。（象集的定义略，但很重要，自行观看）由于PPT的定义中没有考虑关系S可能只是存在和R中属性部分相同的情况（但事实上，是可以计算的，只需要排除无关的属性），因此我们不妨参照课本定义，R是形如R（X，Y）的关系，而S是形如S（Y，Z）的关系（这里需要指出，关系S中参与除法运算的属性应是Y），同时定义所得商关系为T，下面我们来进行梳理；首先，我们直观的理解，R 
</code></pre></div></div> <p>÷ \divS就是： 在R中寻找那些与</p> <p>∏Y(S) {\prod}_Y(S)中的所有元组都有关系的</p> <p>∏X(R) {\prod}_X(R) 的子集（或者说元组）。 注：实例分析请见参考内容1显然由于关系T是关系R在属性X上的投影的子集，因此一定考虑到列计算，也就是投影运算，而关系T与</p> <p>∏Y(S) {\prod}_Y(S)（记为S（Y））的笛卡尔积包含于R（X，Y）中，这意味着我们需要用到笛卡尔积运算，除此之外，我们暂且无法看出还需要进行什么运算。要用基本运算表示除法，我们理所当然的根据上面的分析，先求出</p> <p>∏X(R) {\prod}_X(R) 、</p> <p>∏Y(S) {\prod}_Y(S)两项，而由于最终得到的结果T是这两个关系的笛卡尔积的子集，因此我们不妨先做笛卡尔积，得到</p> <p>∏X(R)×∏Y(S) {\prod}_X(R)\times{\prod}_Y(S)，不妨记作</p> <p>R′ R^{‘}（形如</p> <p>R′ R^{‘}（X，Y）），而定义指出，关系T是那些包含在关系R中但不在S中的属性及其值（也就是说，T是一个形如T（X）的关系），另外，我们注意到关系T和S（Y）的笛卡尔积必须包含在关系R中，因而，此时我们需要做的事情是找到那些是</p> <p>∏X(R) {\prod}_X(R)的子集但与S（Y）的笛卡尔积不包含于关系R的</p> <p>R′ R^{‘}的元组，从而得到</p> <p>R′−R R^{‘}{-}R，记为</p> <p>R′′ R^{‘’}，此时我们距离得到正确结果只有一步之遥。显然，</p> <p>R′′ R^{‘‘}在X上的投影是包含于R在X上的投影的，但他们确实无法通过与S（Y）做笛卡尔积得到包含于关系R的的关系，那么R在X上的投影在刨除了这些元组后得到的关系当然是符合定义要求的关系T了，从而我们得到最后的表达式：</p> <p>R÷S=∏X(R)−∏X(∏X(R)×∏Y(S)−R) R\div{S} = {\prod}_X(R) - {\prod}_X \left( {\prod}_X(R) \times {\prod}_Y(S) - R \right)推导到这里就结束了，希望大家有所收获。参考1：关于实例分析 参考2：关于除法理解</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      立减 ¥
      
    
            
              博客等级
            
              
          
                besslbjwl: 
                好久了，，，我忘了怎么弄的了，，现在不经常用vs了，用pycharm
            
                BILLYLW: 
                我也有同样的问题，请问解决了吗？[code=python]Microsoft Visual C++ Redistributable is not installed, this may lead to the DLL load failure.
             It can be downloaded at https://aka.ms/vs/16/release/vc_redist.x64.exe
</code></pre></div></div> <p>[/code]</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                besslbjwl: 
                你好，请问一下我装完pytorch之后，vs2015打不开了是怎么回事啊？
            
                buaa0110
                 回复 
                祺云:  版本问题，更新一下应该就可
            
                buaa0110
                 回复 
                numericaaa:  正解
            请填写红包祝福语或标题红包个数最小为10个红包金额最低5元抵扣说明： 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[文章浏览阅读2.2w次，点赞22次，收藏36次。本文详细解析了关系代数中的除法运算，并通过基本运算推导出除法的具体步骤。介绍了除法的定义及如何利用投影、笛卡尔积等操作实现除法运算。]]></summary></entry></feed>